<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\DB;
use App\Models\TransactionBonus;
use App\Library\DataTables;

/**
 * @group Members/Commissions
 *
 */
class TransactionsController extends Controller
{
    //
    public function bonus(Request $request)
    {
        $memberId = Auth::id();
        
        return view('transaction-bonus', ['memberId' => $memberId]);
    }
    
    
    /**
     * Display the list of bonuses the member received on a particular transaction
     *
     * 
     * @queryParam request array required 
     * JSON request generated by DataTable
     * 
     * @queryParam id integer required 
     * The id of the logged in member. Example: 5
     * 
     * @param  \Illuminate\Http\Request  $request
     * @param  int $id
     * @return \Illuminate\Http\Response
     */
    public function bonusdata(Request $request, $id)
    {
        $tablecols = [
            0 => 'created_at',
            1 => 'field1|field2',
            2 => 'type',
            3 => 'acquired_amt'
        ];
        
        $filteredmodel = DB::table('transaction_bonuses')
                                ->where('member_id', $id)
                                ->select(DB::raw("id,  
                                                field1, 
                                                field2, 
                                                type,
                                                acquired_amt,
                                                created_at")
                            );
        
        if($request->has('status') && !empty($request->status)) {
            $filteredmodel->where('type', $request->status);
        }
        
        if($request->has('start_date') && !empty($request->start_date)) {        
            if($request->has('end_date') && !empty($request->end_date && $request->start_date != $request->end_date)) {
                $filteredmodel->whereBetween('created_at', [$request->start_date, $request->end_date . ' 23:59:00']);
            } else {
                $filteredmodel->whereDate('created_at', $request->start_date);
            }
        }

        $modelcnt = $filteredmodel->count();

        $data = DataTables::DataTableFiltersNormalSearch($filteredmodel, $request, $tablecols, $hasValue, $totalFiltered);

        return response(['data'=> $data,
            'draw' => $request->draw,
            'recordsTotal' => ($hasValue)? $data->count(): $modelcnt,
            'recordsFiltered' => ($hasValue)? $totalFiltered: $modelcnt], 200);
    }
}
